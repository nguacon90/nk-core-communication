buildscript {
    repositories {
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
    }
}
plugins {
    id 'maven-publish'
    id 'java'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jreleaser' version '1.12.0'
}

ext {
    springBootVersion = '3.2.4'
    springCloudVersion = '2023.0.0'
}

group = 'io.github.nguacon90'
version = '1.0.0'
//
//tasks.register('javadocJar', Jar) {
//    from javadoc
//    archiveBaseName = 'nk-core-communication'
//    archiveVersion =  '1.0.0'
//    archiveClassifier.set('javadoc')
//}

//jar {
//    archiveBaseName = 'nk-core-communication'
//    archiveVersion =  '1.0.0'
//    archiveClassifier.set('')
//    manifest {
//        attributes("Implementation-Title": "Gradle", "Implementation-Version": version)
//    }
//}
shadowJar {
    archiveBaseName = 'nk-core-communication'
    archiveVersion =  '1.0.0'
    archiveClassifier.set('')
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
}

configurations.configureEach {
}

dependencies {
    implementation group: 'org.springframework', name: 'spring-messaging'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '3.1.11'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.1'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation group: 'com.google.guava', name: 'guava', version: '23.0'
    implementation group: 'io.zipkin.brave', name: 'brave', version: '6.0.3'



    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("junit:junit")

}

test {
    useJUnitPlatform()
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                app {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                    namespace = 'io.github.nguacon90'
                }
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'io.github.nguacon90'
            artifactId = 'nk-core-communication'

            from components.java

            pom {
                name = 'NK core communication'
                description = 'NK core communication'
                url = 'https://github.com/nguacon90'
                inceptionYear = '2024'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://spdx.org/licenses/Apache-2.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'nguacon90'
                        name = 'Quang Minh'
                    }
                }
                scm {
                    url = 'https://github.com/nguacon90/z0jfhkboos'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}